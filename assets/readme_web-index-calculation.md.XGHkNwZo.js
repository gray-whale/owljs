import{_ as a,c as e,o as t,U as o}from"./chunks/framework.5aSoBiPS.js";const _=JSON.parse('{"title":"指标计算","description":"","frontmatter":{},"headers":[],"relativePath":"readme/web-index-calculation.md","filePath":"readme/web-index-calculation.md","lastUpdated":1704694661000}'),r={name:"readme/web-index-calculation.md"},n=o('<h1 id="指标计算" tabindex="-1">指标计算 <a class="header-anchor" href="#指标计算" aria-label="Permalink to &quot;指标计算&quot;">​</a></h1><h2 id="计算fmp指标" tabindex="-1">计算FMP指标 <a class="header-anchor" href="#计算fmp指标" aria-label="Permalink to &quot;计算FMP指标&quot;">​</a></h2><p>FMP（首次有意义内容绘制时间，First Meaningful Paint）是页面的主要内容被渲染到屏幕的时间点，换句话来说，即页面的主要内容何时对用户可见。这是我们衡量网页加载对用户体验的一个重要指标。</p><h3 id="基于布局变动趋势衡量" tabindex="-1">基于布局变动趋势衡量 <a class="header-anchor" href="#基于布局变动趋势衡量" aria-label="Permalink to &quot;基于布局变动趋势衡量&quot;">​</a></h3><h3 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h3><p>指标计算原理主要是基于布局变动趋势衡量 FMP，FMP 并不像 FP、FCP 一样有浏览器直接提供的 API，需要开发者自行研究算法实现，这里介绍一种基于布局变动趋势衡量的算法：基本原理是依照 DOM 的复杂度为当前 DOM 设定一个分数，分析 DOM 分数的变动程度来找出合适的 FMP 时间点，而 DOM 的复杂程度和 DOM 的深度息息相关。</p><p>代码实现的理论依据在于：认为DOM 结构变化的时间点与之对应渲染的时间点近似相同。则 FMP 的时间点为 DOM 结构变化最剧烈的时间点。</p><p>DOM 结构变化的时间点可以利用 MutationObserver API 来获得。 通过 MutationObserver 监听每一次页面整体的 DOM 变化，触发 MutationObserver 的回调，在回调计算出当前 DOM 树的分数，分数变化最剧烈的时刻，即为 FMP 的时间点。</p><h3 id="监控变化" tabindex="-1">监控变化 <a class="header-anchor" href="#监控变化" aria-label="Permalink to &quot;监控变化&quot;">​</a></h3><p>想要对 DOM 节点进行阶段性标记，就得有监听 DOM 变化的能力，庆幸的是，HTML5 赋予了我们这个能力。</p><blockquote><p>MutationObserver，Mutation Events功能的替代品，是DOM3 Events规范的一部分。他可以在指定的 DOM 发生变化时执行回调。</p></blockquote><h3 id="什么时间计算" tabindex="-1">什么时间计算？ <a class="header-anchor" href="#什么时间计算" aria-label="Permalink to &quot;什么时间计算？&quot;">​</a></h3><p>window.load 开始计算</p><p>为什么？</p><p>我们认为，通常情况下，在 window 触发 load 事件的时刻，意味着主要业务的 90% 的资源和 dom 都已经准备就绪。此时算出的高权重得分的 dom 就是我们想要找的 FMP 关键节点。</p>',15),i=[n];function l(d,s,c,h,p,M){return t(),e("div",null,i)}const P=a(r,[["render",l]]);export{_ as __pageData,P as default};
